@model OnshoreSDAttendanceTrackerNet.Models.UserViewModel

@{
    ViewBag.Title = "CreateUser";
}

<h2>CreateUser</h2>


@using (Html.BeginForm("CreateUser", "Account", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>UserViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name", @type = "text" }})
            @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name", @type = "text" }})
            @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", @type = "text" }})
            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TeamID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TeamID, new SelectList(ViewBag.TeamsList, "TeamID", "Name"), new { @class = "form-control" })
           @Html.ValidationMessageFor(model => model.TeamID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.User.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.User.RoleName, new List<SelectListItem>
                 {
                 new SelectListItem {Text=" -- ", },
                 new SelectListItem {Text="Service Manager" },
                 new SelectListItem {Text="Team Lead" },
                 new SelectListItem {Text="Service Desk Employee" } })
            @Html.ValidationMessageFor(model => model.User.RoleName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create User" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
