@using OnshoreSDAttendanceTrackerNet.Common
@model Tuple<OnshoreSDAttendanceTrackerNet.Models.EmployeeViewModel,OnshoreSDAttendanceTrackerNet.Models.TeamViewModel>
@{
    ViewBag.Title = "ViewEmployees";
}

<h2 class="UserHeader">View Employees</h2>
@if ((RoleEnum)TempData["Role"] == RoleEnum.Administrator || (RoleEnum)TempData["Role"] == RoleEnum.Service_Manager)
{
    Html.RenderPartial("_TeamSelector", Model.Item2);
}
@if ((RoleEnum)TempData["Role"] == RoleEnum.Team_Lead || (RoleEnum)TempData["Role"] == RoleEnum.Administrator || (RoleEnum)TempData["Role"] == RoleEnum.Service_Manager)
{
    Html.RenderPartial("_EmployeeAdd");
}
            @if ((Boolean)(TempData["InTeamSel"]) == false)
            {
                <table class="UserTable">

                    @foreach (var user in Model.Item1.Employees)
                    {
                        <tr>
                            <td>@Html.DisplayFor(m => user.FirstName)</td>
                            <td>@Html.DisplayFor(m => user.LastName)</td>
                            <td>@Html.DisplayFor(m => user.Email)</td>
                            <td>@Html.DisplayFor(m => user.TeamName)</td>
                            <td>@Html.DisplayFor(m => user.RoleName)</td>
                            <td>@Html.DisplayFor(m => user.Points)</td>
                            <td>@Html.ActionLink("Details", "Details", "Employee", routeValues: new { UserID = user.UserID }, htmlAttributes: new { @class = "btn btn-primary btn-sm" })</td>
                            <td>@Html.ActionLink("Remove User", "DeleteUser", "Account", routeValues: new { UserID = user.UserID }, htmlAttributes: new { @class = "btn btn-primary btn-sm", onclick = "return confirm('Are you sure you want to delete this user?')" })</td>

                        </tr>

                    }

                </table>
            }
                <script>
 function SelectionChanged()
 {
  var url = '@Html.Raw(Url.Action("SelectTeam", "Employee", new { param1=5, param2=2 }))';
  window.location = url;
 }
    function getTeamName(teamId)
    {
        var serviceURL = '@Url.Action("GenerateOrder","CustomerOrder")';
        $.ajax({
            type: "POST",
            url: serviceURL,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
        }).done(function (data, status) {
            if (!data.Success) {
                // error occurred on server
                // redirect to new page
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("Server","Error")',
                    async: false,
                    data: { iErrCode: data.Msg },
                    success: function (content, status, jqXHR) {
                        document.write(content);
                        document.close();
                    },
                    error: function (jqXHR, status, error) {
                        // error occurred with ajax request
                        window.location.href = '@Url.Action("Fatal","Error")';
                    }
                });
            }
            $("#newOrderSpan").show();
            setInterval(flashButton, OneSecond);
        });
                    }


  $("form").submit(function(e){

    e.preventDefault(); // prevent default form submit behaviour

    var selectedItem = $("#MovieType").val();
    var url = '@Html.Raw(Url.Action("SelectTeam", "Employee", new { selelectItem='+}))'
                        "@Url.Content("~")" + selectedItem + "/create";
    alert(url);
    window.location.href=url;

  })

    $("#").click(function deleteAlert() {
        {
            alert("Are you sure you want to delete this User?");
        }
    });

                </script>
